#TODO: wrap all the user messages as functions

def message_you_now_connected_to_the_conversation_partner():
    return "You are now connected with a chat partner!"

def message_a_conversation_partner_found():
    return "Someone became your chat partner!"

def message_this_is_bot_message():
    return "<b>THIS IS BOT'S SERVICE MESSAGE! IT WAS NOT FORWARDED FROM YOUR CHAT PARTNER OR ANY OTHER HUMAN. IT WAS GENERATED BY THE BOT.</b>\n\n"

def message_the_last_tier_reached():
    return "You have reached the last score threshold. You can continue chat with the current partner or use /next_please command to try again."

def message_you_are_not_in_chatting_state():
    return "You are not currently in a conversation. You can use '/start_chatting' to start one."

def message_you_send_end_command_and_your_partner_has_sent_it_earlier():
    return "You sent '/next_please' command. Your partner has sent it earlier. Conversation ended."

def message_you_sent_end_command_earlier_and_your_just_sent_it_now():
    return "You sent '/next_please' command earlier. Your partner just sent it now. Conversation ended."

def message_you_sent_end_command_earlier_and_timer_expired():
    return "You sent '/next_please' command earlier. The timer expired. Conversation ended."

def message_your_partner_sent_end_command_earlier_and_timer_expired():
    return "Your partner sent '/next_please' command earlier. The timer expired. Conversation ended."

def message_this_message_is_forwarded(original_sender_username: str, message_text: str):
    return f"FORWARDED FROM @{original_sender_username}\n\n{message_text}"